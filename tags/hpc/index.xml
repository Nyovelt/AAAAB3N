<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HPC on canarypwn</title><link>https://aaaab3n.moe/tags/hpc/</link><description>Recent content in HPC on canarypwn</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Jan 2021 10:02:59 +0800</lastBuildDate><atom:link href="https://aaaab3n.moe/tags/hpc/index.xml" rel="self" type="application/rss+xml"/><item><title>[残卷]CentOS8 下 slurm 的安装配置尝试</title><link>https://aaaab3n.moe/posts/2021-1-18-centos8-slurm/</link><pubDate>Mon, 18 Jan 2021 10:02:59 +0800</pubDate><guid>https://aaaab3n.moe/posts/2021-1-18-centos8-slurm/</guid><description>Slurm 任务调度工具（前身为极简Linux资源管理工具，英文：Simple Linux Utility for Resource Management，取首字母，简写为SLURM），或 Slurm，是一个用于 Linux 和 Unix 内核系统的免费、开源的任务调度工具，被世界范围内的超级计算机和计算机群广泛采用。它提供了三个关键功能。第一，为用户分配一定时间的专享或非专享的资源(计算机节点)，以供用户执行工作。第二，它提供了一个框架，用于启动、执行、监测在节点上运行着的任务(通常是并行的任务，例如 MPI)，第三，为任务队列合理地分配资源。
安装步骤 系统为 CentOS 8, 一共有两个 node 。其中 node1 作为主节点， node2 作为计算节点。
设置slurm账户 # 新建用户。-m 为用户创建家目录；-G wheel 将用户添加到 wheel 用户组 useradd -m -G wheel slurm # 设置密码 passwd slurm # 查看账户相关性喜 id slurm # 所有节点的 slurm 组 id 必须一致。否则无法启动成功 安装munge yum -y install epel-release yum -y install gtk2 yum -y install gtk-devel yum -y install munge yum -y install munge-devel yum -y install hdf5-devel 手动创建目录,这些目录在munge安装时不会自动创建，分别用于munge的配置、运行、日志等需求。</description></item><item><title>Spack CheatSheet</title><link>https://aaaab3n.moe/posts/2022-2-23-spack-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaaab3n.moe/posts/2022-2-23-spack-cheatsheet/</guid><description>spack environment # For fish $ . spack/share/spack/setup-env.fish spack commands spack install -j (nproc) -vvvv eccodes # spack 安装（或验证某包）并输出详细信息 spack find --path &amp;lt;packages&amp;gt; # 特定包的路径 spack clean -a # 完全清除，包括下载缓存 spack edits Environment def setup_build_environment(self, env): spec = self.spec # Please specify the location of python env.set(&amp;#39;PYTHON_BIN_PATH&amp;#39;, spec[&amp;#39;python&amp;#39;].command.path) def build(self, env): # get build_dir # only works at build stage os.environ[&amp;#34;RRTMGP_ROOT&amp;#34;] = os.getcwd()</description></item></channel></rss>