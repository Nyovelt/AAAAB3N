<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RISC-V on Canarypwn</title><link>https://aaaab3n.moe/tags/risc-v/</link><description>Recent content in RISC-V on Canarypwn</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 15 Mar 2021 10:02:59 +0800</lastBuildDate><atom:link href="https://aaaab3n.moe/tags/risc-v/index.xml" rel="self" type="application/rss+xml"/><item><title>[残卷]RISC-V 指令集</title><link>https://aaaab3n.moe/posts/2021-3-15-risc-v/</link><pubDate>Mon, 15 Mar 2021 10:02:59 +0800</pubDate><guid>https://aaaab3n.moe/posts/2021-3-15-risc-v/</guid><description>CALCULATE ADD e.g. ADD x1 x0 x0 means x1 = x0 + x0 ADDI e.g. ADDI x1 x0 0x11 means x1 = x0 + 3 (DEC) The difference is that ADDI is used for numerical, while ADD is used for registers (or variable we can say) Normally, we can discover ADDI sp sp -32 at the beginning of the program. It&amp;rsquo;s used for allocate memory for the main program.</description></item></channel></rss>